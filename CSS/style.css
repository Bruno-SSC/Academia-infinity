/* vou deixar aqui pra caso eu vá tornar responsivo */
@media(max-width: 900px) {}

@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap');
/* 

Minhas anotações

-- Define-se um tamanho padrão de font-size do HTML de 62.5 para usar sempre ele de referência em todos 
-- elementos através do 'rem'.

-- define-se um vh,vw máximo para o HTML para que o documento trabalhe num tamanho relativo, mas padrão.
-- usa porcentagem, vh, vw para que a página seja responsiva.

-- Se eu definir um width de x pixels. O padding e o border vão ser somados a esse x. Então, se eu tenho 
-- 300px de width e 30px de padding eu tenho um total de 330px. Mas, com o box-sizing: border-box; o meu total
-- vai ser sempre 300px de width.

*/

/*zerando o css*/

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    text-decoration: none;
}

/* definindo tamanho máximo do documento todo */
/* graças a isso fica fácil definir o tamanho de cada 'parte' da tela */

html {
    max-width: 100vw;
    max-height: 100vh;
    font-size: 62.5%;
    color: white;
}

/*Fundo de tela*/

body {
    background-blend-mode: darken;
    background: linear-gradient(rgba(17, 17, 17, 0.8), rgba(20, 20, 20, 1)),
        url(./assets/img5.jpg);
    /* aqui não encontrei uma forma de definir o gradiente como layer acima da imagem sem ser deixando no 
    shortcut */
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
    background-size: cover;
}


/* cabecalho - logo - menu de cima */

.cabecalho {
    width: 100%;
    height: 10vh;
    background: rgba(22, 22, 22, 0.2);

}

.cabecalho .conteudo {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    width: 100%;
    height: 100%;
}

.logo {
    height: 100%;
    width: 30%;
}

.logo img {
    cursor: pointer;
    height: 9vh;
    object-fit: cover;
    padding-top: 1vh;
}

.navbar {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-size: 2rem;
    gap: 1rem;
}

.navbar a {
    color: white;
    padding: 1rem;
    transform: 2ms ease-in;
    position: relative;
    /*esse position só importa para que o a linha amarela reconheça esse elemento como pai*/
    cursor: pointer;
}

/* definindo a pseudoclasse before */

.navbar a::before {
    /* a propriedade content serve pra gerar conteúdo em um elemento através de uma pseudoclasse, como
    a before, no nosso caso logo abaixo */
    /*esse content no caso é aquela linha amarela que corre o elemento*/

    content: '';
    /* aqui é o absolute por ser o único que serve nesse caso para a linha identificar como pai o próprio 
    elemento fazendo com que o conteúdo adicionado fique por aqui mesmo*/
    position: absolute;
    bottom: 0px;
    left: 0px;
    width: 0px;
    height: 0px;
    transition:
        width 0.5s,
        height 1s;
}

/* definindo a pseudoclasse after */

.navbar a::after {
    content: '';
    position: absolute;
    top: 0px;
    right: 0px;
    width: 0px;
    height: 0px;
    transition:
        width 0.5s,
        height 1.3s;
}


/* mudando a width da before pra ela ser visível */

.navbar a:hover::before {
    width: 98%;
    height: 99%;
    border-left: 1px solid yellow;
    border-bottom: 1px solid yellow;
}

/* mudando a width da after pra ela ser visível */

.navbar a:hover::after {
    width: 98%;
    height: 98%;
    border-right: 1px solid yellow;
    border-top: 1px solid yellow;
}

/*Centro - conteúdo principal*/

.principal {
    height: 80vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2rem;
}

.principal .texto {
    text-align: center;
}


.principal .texto .titulo {
    text-align: center;
    font-size: 6.5rem;
    margin-bottom: 2rem;
}

.principal .texto .subtitulo {
    font-size: 2rem;
    color: rgb(165, 165, 165);
    text-transform: uppercase;
    margin-bottom: 7rem;
}



/* Janela da view 360 */


/* a pseudoclasse target vai procurar na url sempre o elemento especificado, se ele tiver lá, ela aplica esse 
valores aí */

#bg:target {
    visibility: visible;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, .8);
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    /*se isso não tivesse aqui o iframe ficaria atrás do terry e dos botões*/
}

/* aqui eu passei o caminho pra chegar no elemento box, mas esse caminho só funciona se a bg:target já existir.*/
/* um caminho é isso, pra chegar no elemento que ele tem que estilizar, ele tem que encontrar cada parte do caminho*/
/* ele só vai mexer no .box se bg:target já 'existir' */

#bg:target .closeButton {
    mix-blend-mode: lighten;
    visibility: visible;
    height: 5rem;
    width: 5rem;
    cursor: pointer;
    position: absolute;
    top: 0%;
    right: 48%;
}

#bg:target iframe {
    border-radius: 3rem;
    border: 5px solid #FFDF59;
    height: 60rem;
    width: 115rem;
    visibility: visible;
}


#bg {
    position: absolute;
    display: inline-block;
    /*se aqui tivesse none é como se o elemento e seus filhos não existissem, logo quando o 
    after ativa e os novos dados são inseridos, eles são considerados os primeiros dados de cara, por isso
    o transition não funciona em display none*/
    transition: background-color 1s;
    visibility: hidden;
}

#bg img {
    visibility: hidden;
    width: 0px;
    height: 0px;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
}

#bg iframe {
    width: 0px;
    height: 0px;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
    visibility: hidden;
}


/* Visualizar equipamentos */

#equipamentos:target {
    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);

    position: fixed;
    visibility: visible;
    z-index: 1;
}


#equipamentos:target #fotoAtual {
    position: static;
    /* sem esse position eles tavam se relacionando a viewport e isso tava cagando tudo o 
    código porque eles não tavam recebendo o flex do pai deles e sim do viewport por terem recebido position:fixed 
    da div equipamentos*/
    visibility: visible;

    border-radius: 3rem;
    border: 5px solid #FFDF59;
    mix-blend-mode: lighten;

    height: 60rem;
    width: 115rem;

    background-size: 100% 100%;
}

#equipamentos:target .seta {
    position: static;
    cursor: pointer;
    visibility: visible;

    mix-blend-mode: lighten;
    border: 5px solid #FFDF59;
    border-radius: 3rem;

    width: 5rem;
    margin: 2rem;
    height: 5rem;

}

#equipamentos:target .closeButton {
    mix-blend-mode: lighten;
    visibility: visible;
    height: 5rem;
    width: 5rem;
    cursor: pointer;
    top: 0%;
    right: 48%;
    position: absolute;
}

#equipamentos {
    transition: background-color 1s;
    visibility: hidden;
    position: absolute;
}

#equipamentos * {
    width: 0px;
    height: 0px;
    visibility: hidden;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
}

/* assinaturas */

#assinaturas:target {
    display: flex;
    justify-content: center;
    align-items: center;

    position: fixed;
    visibility: visible;
    background-image: linear-gradient(to bottom right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 1), rgba(255, 223, 89, .99));


    height: 100%;
    width: 100%;
    z-index: 1;

}


#assinaturas:target .planos {
    visibility: visible;
    position: relative;
    height: 60rem;
    max-width: 30rem;
    width: auto;
    margin: 15rem;
    overflow-y: scroll;
    overflow-x: hidden;
    padding-right: 1rem;

}

.planos::-webkit-scrollbar {
    width: 1rem;
}

.planos::-webkit-scrollbar-track {
    background-color: rgba(100, 100, 100, 0);
    border: 1rem solid transparent;
}

.planos::-webkit-scrollbar-thumb {
    background-image: linear-gradient(to bottom, rgba(255, 223, 89, 1), rgb(255, 255, 255));
    border: 3px solid transparent;
    border-radius: 9px;
    background-clip: content-box;
    /* Esse clip faz que a cor do fundo do thumb fique só no thumb e não invada a track */
}

#assinaturas:target .planos img {
    visibility: visible;
    object-fit: cover;
    width: fit-content;
    height: fit-content;

}

#assinaturas:target .closeButton {
    mix-blend-mode: lighten;
    visibility: visible;
    height: 5rem;
    width: 5rem;
    cursor: pointer;
    top: 0%;
    right: 48%;
    position: absolute;
}

#assinaturas {
    visibility: hidden;
    position: absolute;
    height: 0px;
    width: 0px;
    transition: all 0.5s;

}

#assinaturas img[class="closeButton"] {
    visibility: hidden;
    width: 0px;
    height: 0px;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
}

#assinaturas .planos {
    visibility: hidden;
    width: 0px;
    height: 0px;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
}

#assinaturas .planos img {
    width: 0px;
    height: 0px;
}

/* Professores */

#professores:target {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    
    background-image: linear-gradient(to bottom right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 1), rgba(255, 223, 89, .99));
    
    visibility: visible;
    position: fixed;
    overflow-y: scroll;
    
    height: 100%;
    width: 100%;
    z-index: 1;

}


#professores:target .cartao {
    
    visibility: visible;
    position: relative;
    height: 40rem;
    margin: 7rem 2rem 2rem 2rem;

    width: 30rem;
    border: 4px solid green;
    background-color: blue;

}

#professores:target .cartao img {
    visibility: visible;
    object-fit: cover;
    width: fit-content;
    height: fit-content;

}

#professores:target .closeButton {
    mix-blend-mode: lighten;
    visibility: visible;
    height: 5rem;
    width: 5rem;
    cursor: pointer;
    top: 0%;
    right: 48%;
    position: absolute;
}

#professores {
    visibility: visible;
    position: absolute;
    height: 0px;
    width: 0px;
    transition: all 0.5s;
}

#professores::-webkit-scrollbar {
    width: 1rem;
}

#professores::-webkit-scrollbar-track {
    background-color: rgba(100, 100, 100, 0);
    border: 1rem solid transparent;
}

#professores::-webkit-scrollbar-thumb {
    background-image: linear-gradient(to bottom, rgba(255, 223, 89, 1), rgb(255, 255, 255));
    border: 3px solid transparent;
    border-radius: 9px;
    background-clip: content-box;
}

#professores img[class="closeButton"] {
    visibility: hidden;
    width: 0px;
    height: 0px;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
}

#professores .cartao {
    visibility: hidden;
    width: 0px;
    height: 0px;
    transition:
        height 3s,
        width 3s,
        visibility 0s;
}

/* botoes */

.principal .botoes {
    display: flex;
    justify-content: center;
    gap: 45rem;
}

.principal .botao {
    width: 25rem;
    height: 10rem;
    border-radius: 20px;
    border: 1px white solid;
    cursor: pointer;
    color: white;
    text-transform: uppercase;
    background-color: transparent;
    font-weight: bold;
    letter-spacing: 00.2rem;
    position: relative;
    transition: 1.5s;
}


/* mesma ideia do before lá em cima */

.principal .botoes button:nth-child(1)::before {

    content: '';
    bottom: 0px;
    transform: translateX(-25%);
    width: 100%;
    height: 0%;
    border-radius: 0px 0px 20px 20px;
    position: absolute;
    background-color: rgb(61, 61, 61);
    /* o z-index define o nível de layer desse elemento */
    z-index: -1;
    transition: 1s;
}

.principal .botoes button:nth-child(1):after {
    content: '';
    top: 0%;
    width: 100%;
    transform: translateX(-75%);
    height: 0%;
    border-radius: 20px 20px 0px 0px;
    position: absolute;
    background-color: rgb(61, 61, 61);
    z-index: -1;
    transition: 1s;
}

/* tive que fazer o mesmo efeito pra cada botão por conta da referência que o transform tinha com relação
a div pai */

.principal .botoes button:nth-child(2)::before {

    content: '';
    bottom: 0px;
    transform: translateX(-15%);
    width: 100%;
    height: 0%;
    border-radius: 0px 0px 20px 20px;
    position: absolute;
    background-color: rgb(61, 61, 61);
    /* o z-index define o nível de layer desse elemento */
    z-index: -1;
    transition: 1s;
}

.principal .botoes button:nth-child(2):after {
    content: '';
    top: 0%;
    width: 100%;
    transform: translateX(-65%);
    height: 0%;
    border-radius: 20px 20px 0px 0px;
    position: absolute;
    background-color: rgb(61, 61, 61);
    z-index: -1;
    transition: 1s;
}



.principal .botoes button:hover::before {
    height: 50%;
}

.principal .botoes button:hover::after {
    height: 50%;
}

.principal .botoes button:hover {
    color: rgb(251, 255, 0);
    transition: 1.5s;
}


.principal #terryCrews {
    position: absolute;
    bottom: 0%;
    max-height: 25rem;
    mix-blend-mode: luminosity;
}